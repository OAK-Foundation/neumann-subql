name: Common Deploy

on:
  workflow_call:
    inputs:
      target_env:
        required: true
        type: string
    secrets:
      SSH_DEPLOY_KEY:
        required: true
      HOST:
        required: true
      SECRET_FILE:
        required: true

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    # node lts
    container: node:18.16.0

    environment: "${{ inputs.target_env }}"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Prepare SSH connection
        run: |
          mkdir -p ~/.ssh
          echo ${{ secrets.SSH_DEPLOY_KEY }} | base64 --decode > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST }} > ~/.ssh/known_hosts
          chmod 400 ~/.ssh/*

      - name: Build TypeScript Code for subql
        run: |
          npm i --ci
          ./node_modules/.bin/subql codegen
          ./node_modules/.bin/subql build

      - name: Build TypeScript Code for mixer
        run: |
          npm i --ci
          npm run build
        working-directory: mixer

      - name: Sync code to server
        run: |
          apt update && apt install -y rsync

          rsync -e "ssh -o UserKnownHostsFile=$HOME/.ssh/known_hosts -i $HOME/.ssh/id_rsa" \
              -avz \
              --delete \
              --exclude=__pycache__ --exclude=.caddy-data --exclude=.git \
              . insights@${{ secrets.HOST }}:~/oak-subql || true

      - name: Build the container
        run : |
          ssh -o UserKnownHostsFile=$HOME/.ssh/known_hosts \
              -i ~/.ssh/id_rsa \
              insights@${{ secrets.HOST }} '\
                cd ~/oak-subql && \
                echo ${{ secrets.SECRET_FILE }} | base64 --decode > secret.${{ inputs.target_env }} && \
                source secret.${{ inputs.target_env }} && \
                make build'

      - name: Bring up the new container
        run : |
          ssh -o UserKnownHostsFile=$HOME/.ssh/known_hosts \
            -i ~/.ssh/id_rsa \
            insights@${{ secrets.HOST }} '\
              docker compose -f /etc/caddy/docker-compose.yml down; \
              cd ~/oak-subql && \
              source secret.${{ inputs.target_env }} && \
              make down up && \
              docker compose -f /etc/caddy/docker-compose.yml up --force-recreate -d'
